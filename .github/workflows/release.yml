# .github/workflows/release.yml
name: CT Types Release (GH Release + PyPI + versioned docs)

on:
  push:
    tags:
      - "v*.*.*"  # trigger only on version tags like v0.1.4

permissions:
  contents: write   # create the GitHub Release + push gh-pages in docs job
  id-token: write   # PyPI Trusted Publishing (OIDC)

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Extract plain version from tag (no leading `v`)
        id: ver
        shell: bash
        run: echo "plain=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Print build version for logs
        run: echo "Building version ${{ steps.ver.outputs.plain }}"

      - name: Install codegen deps only (no editable install)
        run: |
          python -m pip install --upgrade pip
          pip install ".[codegen]"

      - name: Regenerate types
        run: python scripts/generate_types.py

      # Install test deps and the package (NOT editable) with the pinned version
      # pip installing the project triggers a PEP 517 build; we pass PRETEND_VERSION
      # so setuptools_scm produces an exact X.Y.Z instead of X.Y.Z.dev0
      - name: Install test deps & project (non-editable, exact version)
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ steps.ver.outputs.plain }}
        run: |
          python -m pip install --upgrade pip
          pip install ".[test]"

      - name: Run tests (include any validation and coverage)
        run: pytest -q

      - name: Install build tooling
        run: pip install build

      - name: Build sdist + wheel (exact version)
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ steps.ver.outputs.plain }}
        run: python -m build

      - name: List artifacts
        run: python .github/scripts/list_artifacts.py

      - name: Create GitHub Release + upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}  # e.g., v0.1.4
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: false
          make_latest: true

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1

  docs:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # allow mike to push to gh-pages

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install docs deps (from extras, non-editable)
        run: |
          python -m pip install --upgrade pip
          pip install ".[docs]"

      - name: Configure git for mike
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages branch exists locally
        run: |
          git fetch origin gh-pages:gh-pages || true

      - name: Build docs (fail fast)
        run: mkdocs build

      - name: Deploy versioned docs with Mike & set latest
        env:
          TAG: ${{ github.ref_name }}   # e.g., v0.1.4
        run: |
          VERSION="${TAG#v}"            # strip leading 'v'
          mike deploy --push --update-aliases latest "$VERSION"
          mike set-default --push latest

